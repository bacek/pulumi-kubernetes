// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.kubeconfig.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EksArgs extends com.pulumi.resources.InvokeArgs {

    public static final EksArgs Empty = new EksArgs();

    /**
     * AWS credential profile name to always use instead of the default AWS credential provider chain.
     * 
     * The profile is passed to kubeconfig as an authentication environment setting.
     * 
     */
    @Import(name="profileName")
    private @Nullable Output<String> profileName;

    /**
     * @return AWS credential profile name to always use instead of the default AWS credential provider chain.
     * 
     * The profile is passed to kubeconfig as an authentication environment setting.
     * 
     */
    public Optional<Output<String>> profileName() {
        return Optional.ofNullable(this.profileName);
    }

    /**
     * Role ARN to assume instead of the default AWS credential provider chain.
     * 
     * The role is passed to kubeconfig as an authentication exec argument.
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    /**
     * @return Role ARN to assume instead of the default AWS credential provider chain.
     * 
     * The role is passed to kubeconfig as an authentication exec argument.
     * 
     */
    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    private EksArgs() {}

    private EksArgs(EksArgs $) {
        this.profileName = $.profileName;
        this.roleArn = $.roleArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EksArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EksArgs $;

        public Builder() {
            $ = new EksArgs();
        }

        public Builder(EksArgs defaults) {
            $ = new EksArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param profileName AWS credential profile name to always use instead of the default AWS credential provider chain.
         * 
         * The profile is passed to kubeconfig as an authentication environment setting.
         * 
         * @return builder
         * 
         */
        public Builder profileName(@Nullable Output<String> profileName) {
            $.profileName = profileName;
            return this;
        }

        /**
         * @param profileName AWS credential profile name to always use instead of the default AWS credential provider chain.
         * 
         * The profile is passed to kubeconfig as an authentication environment setting.
         * 
         * @return builder
         * 
         */
        public Builder profileName(String profileName) {
            return profileName(Output.of(profileName));
        }

        /**
         * @param roleArn Role ARN to assume instead of the default AWS credential provider chain.
         * 
         * The role is passed to kubeconfig as an authentication exec argument.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn Role ARN to assume instead of the default AWS credential provider chain.
         * 
         * The role is passed to kubeconfig as an authentication exec argument.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public EksArgs build() {
            return $;
        }
    }

}
