// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Generate a kubeconfig for cluster authentication that does not use the default AWS credential provider chain, and instead is scoped to the supported options in `KubeconfigOptions`.
 *
 * The kubeconfig generated is automatically stringified for ease of use with the pulumi/kubernetes provider.
 *
 * See for more details:
 * - https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html
 * - https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-role.html
 * - https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html
 */
export function eks(args?: EksArgs, opts?: pulumi.InvokeOptions): Promise<EksResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("kubernetes:kubeconfig:eks", {
        "profileName": args.profileName,
        "roleArn": args.roleArn,
    }, opts);
}

export interface EksArgs {
    /**
     * AWS credential profile name to always use instead of the default AWS credential provider chain.
     *
     * The profile is passed to kubeconfig as an authentication environment setting.
     */
    profileName?: string;
    /**
     * Role ARN to assume instead of the default AWS credential provider chain.
     *
     * The role is passed to kubeconfig as an authentication exec argument.
     */
    roleArn?: string;
}

export interface EksResult {
    readonly result: string;
}
/**
 * Generate a kubeconfig for cluster authentication that does not use the default AWS credential provider chain, and instead is scoped to the supported options in `KubeconfigOptions`.
 *
 * The kubeconfig generated is automatically stringified for ease of use with the pulumi/kubernetes provider.
 *
 * See for more details:
 * - https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html
 * - https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-role.html
 * - https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html
 */
export function eksOutput(args?: EksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<EksResult> {
    return pulumi.output(args).apply((a: any) => eks(a, opts))
}

export interface EksOutputArgs {
    /**
     * AWS credential profile name to always use instead of the default AWS credential provider chain.
     *
     * The profile is passed to kubeconfig as an authentication environment setting.
     */
    profileName?: pulumi.Input<string>;
    /**
     * Role ARN to assume instead of the default AWS credential provider chain.
     *
     * The role is passed to kubeconfig as an authentication exec argument.
     */
    roleArn?: pulumi.Input<string>;
}
